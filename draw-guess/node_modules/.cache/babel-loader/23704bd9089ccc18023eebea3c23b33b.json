{"remainingRequest":"/Users/adibaram/Documents/Coding/draw-guess/node_modules/babel-loader/lib/index.js!/Users/adibaram/Documents/Coding/draw-guess/node_modules/eslint-loader/index.js??ref--13-0!/Users/adibaram/Documents/Coding/draw-guess/src/router.js","dependencies":[{"path":"/Users/adibaram/Documents/Coding/draw-guess/src/router.js","mtime":1547384741150},{"path":"/Users/adibaram/Documents/Coding/draw-guess/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/draw-guess/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/draw-guess/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router'; // import NProgress from 'nprogress';\n//views\n\nimport Home from './views/home.vue';\nimport chooseWord from './views/chooseWord.vue';\nimport draw from './views/draw.vue';\nimport guess from './views/guess.vue';\nimport wait from './views/wait.vue';\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home\n  }, {\n    path: '/choose',\n    name: 'chooseWord',\n    component: chooseWord\n  }, {\n    path: '/draw',\n    name: 'draw',\n    component: function component() {\n      return import('./views/draw.vue');\n    } // component: draw\n\n  }, {\n    path: '/guess',\n    name: 'guess',\n    component: guess\n  }, {\n    path: '/wait',\n    name: 'wait',\n    component: wait\n  }]\n}); // router.beforeResolve((to, from, next) => {\n//   if (to.name) {\n//       NProgress.start()\n//   }\n//   next()\n// })\n// router.afterEach((to, from) => {\n//   NProgress.done()\n// })\n\nexport default router;",{"version":3,"sources":["/Users/adibaram/Documents/Coding/draw-guess/src/router.js"],"names":["Vue","Router","Home","chooseWord","draw","guess","wait","use","router","mode","base","process","env","BASE_URL","routes","path","name","component"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CACA;AAEA;;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAGAN,GAAG,CAACO,GAAJ,CAAQN,MAAR;AAEA,IAAMO,MAAM,GAAI,IAAIP,MAAJ,CAAW;AACzBQ,EAAAA,IAAI,EAAE,SADmB;AAEzBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFO;AAGzBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEf;AAHb,GADM,EAMN;AACEa,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,SAAS,EAAEd;AAHb,GANM,EAWN;AACEY,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,kBAAP,CAAN;AAAA,KAHb,CAIE;;AAJF,GAXM,EAiBN;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,SAAS,EAAEZ;AAHb,GAjBM,EAsBN;AACEU,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEX;AAHb,GAtBM;AAHiB,CAAX,CAAhB,C,CAkCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAeE,MAAf","sourcesContent":["import Vue from 'vue';\nimport Router from 'vue-router';\n// import NProgress from 'nprogress';\n\n//views\nimport Home from './views/home.vue';\nimport chooseWord from './views/chooseWord.vue'; \nimport draw from './views/draw.vue'; \nimport guess from './views/guess.vue'; \nimport wait from './views/wait.vue'; \n\n\nVue.use(Router);\n\nconst router =  new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home\n    }, \n    {\n      path: '/choose',\n      name: 'chooseWord',\n      component: chooseWord\n    }, \n    {\n      path: '/draw',\n      name: 'draw',\n      component: () => import('./views/draw.vue')\n      // component: draw\n    }, \n    {\n      path: '/guess',\n      name: 'guess',\n      component: guess\n    }, \n    {\n      path: '/wait',\n      name: 'wait',\n      component: wait\n    }\n\n  ]\n})\n\n// router.beforeResolve((to, from, next) => {\n//   if (to.name) {\n//       NProgress.start()\n//   }\n//   next()\n// })\n\n// router.afterEach((to, from) => {\n//   NProgress.done()\n// })\n\nexport default router;"]}]}
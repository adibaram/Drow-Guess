{"remainingRequest":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/babel-loader/lib/index.js!/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/eslint-loader/index.js??ref--13-0!/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/store.js","dependencies":[{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/store.js","mtime":1548161092765},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { socketEmitter } from './services/socketEmitter.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    isLoggedinUser: false,\n    isSecondLoggdin: false,\n    playersCount: 0,\n    selectedWord: null,\n    userType: '',\n    gameRoom: '',\n    userGuess: '',\n    canvasUrl: '',\n    drawUrl: '',\n    isDoneDrawing: false,\n    isDraw: false,\n    userName: ''\n  },\n  getters: {\n    getPlayersCount: function getPlayersCount(state) {\n      return state.playersCount;\n    },\n    getCurrCanvasUrl: function getCurrCanvasUrl(state) {\n      return state.canvasUrl;\n    },\n    isDraw: function isDraw(state) {\n      return state.isDraw;\n    },\n    isDoneDrawing: function isDoneDrawing(state) {\n      return state.isDoneDrawing;\n    },\n    getImgUrl: function getImgUrl(state) {\n      return state.drawUrl;\n    }\n  },\n  mutations: {\n    incrementPlayers: function incrementPlayers(state) {\n      state.playersCount++;\n      console.log('playersCount', this.state.playersCount);\n    },\n    setUserName: function setUserName(state, name) {\n      console.log(name);\n      state.userName = name;\n    },\n    setGuess: function setGuess(state, _ref) {\n      var userGuess = _ref.userGuess;\n      state.userGuess = userGuess;\n      console.log('DEBUG:store-setGuess:guess', userGuess);\n    },\n    setSelctedWord: function setSelctedWord(state, _ref2) {\n      var selectedWord = _ref2.selectedWord;\n      state.selectedWord = selectedWord;\n      console.log('DEBUG:store-setSelctedWord:selectedWord', selectedWord);\n    },\n    setDoneDrawing: function setDoneDrawing(state) {\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDoneDrawing:true', state.isDoneDrawing);\n    },\n    setCanvasUrl: function setCanvasUrl(state, _ref3) {\n      var canvasUrl = _ref3.canvasUrl;\n      state.canvasUrl = canvasUrl;\n      console.log('DEBUG:store-setCanvasUrl:canvasUrl', canvasUrl);\n    },\n    setDrawUrl: function setDrawUrl(state, _ref4) {\n      var drawUrl = _ref4.drawUrl;\n      state.drawUrl = drawUrl;\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDrawUrl:drawUrl', drawUrl);\n    },\n    setGameRoom: function setGameRoom(state, _ref5) {\n      var userName = _ref5.userName,\n          turn = _ref5.turn,\n          gameRoom = _ref5.gameRoom;\n      state.gameRoom = gameRoom;\n      console.log('DEBUG:store-setGameRoom:gameRoom', gameRoom);\n      !turn ? state.playersCount = 2 : state.playersCount = 1;\n\n      if (state.userName === userName) {\n        state.isDraw = turn;\n      }\n    }\n  },\n  actions: {\n    setGuess: function setGuess(context, _ref6) {\n      var userGuess = _ref6.userGuess;\n      context.commit('setGuess', {\n        userGuess: userGuess\n      }); // console.log('user guess listed', {userGuess});\n    },\n    setSelctedWord: function setSelctedWord(context, _ref7) {\n      var selectedWord = _ref7.selectedWord;\n      context.commit('setSelctedWord', {\n        selectedWord: selectedWord\n      }); // console.log('user selected a word:', {selectedWord});\n    },\n    setCanvasUrl: function setCanvasUrl(context, _ref8) {\n      var canvasUrl = _ref8.canvasUrl;\n      context.commit('setCanvasUrl', {\n        canvasUrl: canvasUrl\n      }); // console.log('current canvas base64:', {canvasUrl});\n    },\n    setDoneDrawing: function setDoneDrawing(context) {\n      context.commit('setDoneDrawing');\n    },\n    setDrawUrl: function setDrawUrl(context, _ref9) {\n      var drawUrl = _ref9.drawUrl;\n      context.commit('setDrawUrl', {\n        drawUrl: drawUrl\n      }); // console.log('draw link:', {drawUrl});\n    },\n    setUserName: function setUserName(_ref10, _ref11) {\n      var commit = _ref10.commit;\n      var name = _ref11.name;\n      commit('setUserName', name);\n      socketEmitter.$socket.emit('gameRoom', name);\n    },\n    SOCKET_gameRoom: function SOCKET_gameRoom(context, _ref12) {\n      var userName = _ref12.userName,\n          turn = _ref12.turn,\n          gameRoom = _ref12.gameRoom;\n      context.commit('setGameRoom', {\n        userName: userName,\n        turn: turn,\n        gameRoom: gameRoom\n      });\n      console.log('socket store', this.state.playersCount);\n    },\n    SOCKET_drawSubmitted: function SOCKET_drawSubmitted(context, _ref13) {\n      var drawUrl = _ref13.drawUrl;\n      context.commit('setDrawUrl', {\n        drawUrl: drawUrl\n      });\n    }\n  }\n});",{"version":3,"sources":["/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/store.js"],"names":["Vue","Vuex","socketEmitter","use","Store","state","isLoggedinUser","isSecondLoggdin","playersCount","selectedWord","userType","gameRoom","userGuess","canvasUrl","drawUrl","isDoneDrawing","isDraw","userName","getters","getPlayersCount","getCurrCanvasUrl","getImgUrl","mutations","incrementPlayers","console","log","setUserName","name","setGuess","setSelctedWord","setDoneDrawing","setCanvasUrl","setDrawUrl","setGameRoom","turn","actions","context","commit","$socket","emit","SOCKET_gameRoom","SOCKET_drawSubmitted"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport {socketEmitter} from './services/socketEmitter.js'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    isLoggedinUser: false,\n    isSecondLoggdin: false,\n    playersCount: 0,\n    selectedWord: null,\n    userType: '',\n    gameRoom: '', \n    userGuess: '', \n    canvasUrl: '',\n    drawUrl:'',\n    isDoneDrawing: false, \n    isDraw: false,\n    userName: ''\n\n  },\n\n  getters: {\n    getPlayersCount(state) {\n      return state.playersCount;\n    },\n    getCurrCanvasUrl(state) {\n      return state.canvasUrl; \n    },\n    isDraw(state){\n      return state.isDraw;\n    },\n    isDoneDrawing(state){\n      return state.isDoneDrawing;\n    },\n    getImgUrl(state) {\n      return state.drawUrl; \n    }\n\n\n  },\n\n  mutations: {\n    incrementPlayers(state) {\n      state.playersCount++;\n      console.log('playersCount', this.state.playersCount);\n    },\n    setUserName(state, name){\n      console.log(name)\n      state.userName = name;\n    },\n    setGuess(state, {userGuess}) {\n      state.userGuess = userGuess;\n      console.log('DEBUG:store-setGuess:guess', userGuess);\n    },\n    setSelctedWord(state, {selectedWord}) {\n      state.selectedWord = selectedWord;\n      console.log('DEBUG:store-setSelctedWord:selectedWord', selectedWord);\n    },\n    setDoneDrawing(state) {\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDoneDrawing:true', state.isDoneDrawing);\n    },\n    setCanvasUrl(state, {canvasUrl}) {\n      state.canvasUrl = canvasUrl;\n      console.log('DEBUG:store-setCanvasUrl:canvasUrl', canvasUrl);\n    },\n    setDrawUrl(state, {drawUrl}) {\n      state.drawUrl = drawUrl;\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDrawUrl:drawUrl', drawUrl);\n    },\n    setGameRoom( state, {userName, turn, gameRoom}){\n      state.gameRoom = gameRoom;\n      console.log('DEBUG:store-setGameRoom:gameRoom', gameRoom);\n\n      !turn? state.playersCount = 2 : state.playersCount = 1;\n      if (state.userName === userName) {\n      state.isDraw = turn;\n      }\n    }\n\n  },\n\n  actions: {\n\n    setGuess(context, {userGuess}) {\n      context.commit('setGuess', {userGuess});\n      // console.log('user guess listed', {userGuess});\n    },\n\n    setSelctedWord(context, {selectedWord}) {\n      context.commit('setSelctedWord', {selectedWord});\n      // console.log('user selected a word:', {selectedWord});\n    },\n\n    setCanvasUrl(context, {canvasUrl}) {\n      context.commit('setCanvasUrl', {canvasUrl});\n      // console.log('current canvas base64:', {canvasUrl});\n    },\n    setDoneDrawing(context) {\n      context.commit('setDoneDrawing');\n    },\n    setDrawUrl(context, {drawUrl}) {\n      context.commit('setDrawUrl', {drawUrl});\n      // console.log('draw link:', {drawUrl});\n    },\n    setUserName({commit}, {name}){\n      commit('setUserName', name);\n      socketEmitter.$socket.emit('gameRoom', name); \n    },\n    SOCKET_gameRoom(context, {userName, turn, gameRoom}){\n      context.commit('setGameRoom', {userName, turn, gameRoom});\n      console.log('socket store', this.state.playersCount);\n      \n    },\n    SOCKET_drawSubmitted(context, {drawUrl}) {\n      context.commit('setDrawUrl', {drawUrl});\n    }\n\n\n    \n\n  },\n\n});\n\n"]}]}
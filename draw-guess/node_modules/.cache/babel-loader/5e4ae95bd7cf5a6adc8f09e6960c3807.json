{"remainingRequest":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/babel-loader/lib/index.js!/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/eslint-loader/index.js??ref--13-0!/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/store.js","dependencies":[{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/store.js","mtime":1548171029583},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { socketEmitter } from './services/socketEmitter.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    isLoggedinUser: false,\n    isSecondLoggdin: false,\n    playersCount: 0,\n    selectedWord: null,\n    userType: '',\n    gameRoom: '',\n    userGuess: '',\n    canvasUrl: '',\n    drawUrl: '',\n    isDoneDrawing: false,\n    isDraw: false,\n    userName: '',\n    gameOver: false\n  },\n  getters: {\n    getPlayersCount: function getPlayersCount(state) {\n      return state.playersCount;\n    },\n    getCurrCanvasUrl: function getCurrCanvasUrl(state) {\n      return state.canvasUrl;\n    },\n    isDraw: function isDraw(state) {\n      return state.isDraw;\n    },\n    isDoneDrawing: function isDoneDrawing(state) {\n      return state.isDoneDrawing;\n    },\n    getImgUrl: function getImgUrl(state) {\n      return state.drawUrl;\n    },\n    getUserName: function getUserName(state) {\n      return state.userName;\n    },\n    getSelectedWord: function getSelectedWord(state) {\n      return state.selectedWord;\n    },\n    getIsGameOver: function getIsGameOver(state) {\n      return state.gameOver;\n    }\n  },\n  mutations: {\n    incrementPlayers: function incrementPlayers(state) {\n      state.playersCount++;\n      console.log('playersCount', this.state.playersCount);\n    },\n    setUserName: function setUserName(state, name) {\n      console.log(name);\n      state.userName = name;\n    },\n    setGuess: function setGuess(state, _ref) {\n      var userGuess = _ref.userGuess;\n      state.userGuess = userGuess;\n      console.log('DEBUG:store-setGuess:guess', userGuess);\n    },\n    setSelctedWord: function setSelctedWord(state, _ref2) {\n      var selectedWord = _ref2.selectedWord;\n      state.selectedWord = selectedWord;\n      console.log('DEBUG:store-setSelctedWord:selectedWord', selectedWord);\n    },\n    setDoneDrawing: function setDoneDrawing(state) {\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDoneDrawing:true', state.isDoneDrawing);\n    },\n    setCanvasUrl: function setCanvasUrl(state, _ref3) {\n      var canvasUrl = _ref3.canvasUrl;\n      state.canvasUrl = canvasUrl;\n      console.log('DEBUG:store-setCanvasUrl:canvasUrl', canvasUrl);\n    },\n    setDrawUrl: function setDrawUrl(state, _ref4) {\n      var drawUrl = _ref4.drawUrl;\n      state.drawUrl = drawUrl;\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDrawUrl:drawUrl', drawUrl);\n    },\n    setGameRoom: function setGameRoom(state, _ref5) {\n      var userName = _ref5.userName,\n          turn = _ref5.turn,\n          gameRoom = _ref5.gameRoom;\n      state.gameRoom = gameRoom;\n      console.log('DEBUG:store-setGameRoom:gameRoom', gameRoom);\n      !turn ? state.playersCount = 2 : state.playersCount = 1;\n\n      if (state.userName === userName) {\n        state.isDraw = turn;\n      }\n    },\n    setGameOver: function setGameOver(state) {\n      state.gameOver = true;\n    }\n  },\n  actions: {\n    setGuess: function setGuess(context, _ref6) {\n      var userGuess = _ref6.userGuess;\n      context.commit('setGuess', {\n        userGuess: userGuess\n      }); // console.log('user guess listed', {userGuess});\n    },\n    setSelctedWord: function setSelctedWord(context, _ref7) {\n      var selectedWord = _ref7.selectedWord;\n      context.commit('setSelctedWord', {\n        selectedWord: selectedWord\n      });\n      socketEmitter.$socket.emit('wordChosen', context.state.gameRoom, selectedWord);\n      console.log('user selected a word:', {\n        selectedWord: selectedWord\n      });\n    },\n    setCanvasUrl: function setCanvasUrl(context, _ref8) {\n      var canvasUrl = _ref8.canvasUrl;\n      context.commit('setCanvasUrl', {\n        canvasUrl: canvasUrl\n      }); // console.log('current canvas base64:', {canvasUrl});\n    },\n    setDoneDrawing: function setDoneDrawing(context) {\n      context.commit('setDoneDrawing');\n    },\n    setDrawUrl: function setDrawUrl(context, _ref9) {\n      var drawUrl = _ref9.drawUrl;\n      context.commit('setDrawUrl', {\n        drawUrl: drawUrl\n      });\n      socketEmitter.$socket.emit('drawSubmitted', context.state.gameRoom, drawUrl); // console.log('draw link:', {drawUrl});\n    },\n    setUserName: function setUserName(_ref10, _ref11) {\n      var commit = _ref10.commit;\n      var name = _ref11.name;\n      commit('setUserName', name);\n      socketEmitter.$socket.emit('gameRoom', name);\n    },\n    setGameOver: function setGameOver(context) {\n      context.commit('setGameOver');\n      socketEmitter.$socket.emit('gameOver', context.state.gameRoom);\n    },\n    SOCKET_gameRoom: function SOCKET_gameRoom(context, _ref12) {\n      var userName = _ref12.userName,\n          turn = _ref12.turn,\n          gameRoom = _ref12.gameRoom;\n      context.commit('setGameRoom', {\n        userName: userName,\n        turn: turn,\n        gameRoom: gameRoom\n      }); // console.log('socket store', this.state.playersCount);\n    },\n    SOCKET_wordChosen: function SOCKET_wordChosen(context, _ref13) {\n      var selectedWord = _ref13.selectedWord;\n      context.commit('setSelctedWord', {\n        selectedWord: selectedWord\n      });\n    },\n    SOCKET_drawSubmitted: function SOCKET_drawSubmitted(context, _ref14) {\n      var drawUrl = _ref14.drawUrl;\n      context.commit('setDrawUrl', {\n        drawUrl: drawUrl\n      });\n    },\n    SOCKET_gameOver: function SOCKET_gameOver(context) {\n      context.commit('setGameOver');\n    }\n  }\n});",{"version":3,"sources":["/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/store.js"],"names":["Vue","Vuex","socketEmitter","use","Store","state","isLoggedinUser","isSecondLoggdin","playersCount","selectedWord","userType","gameRoom","userGuess","canvasUrl","drawUrl","isDoneDrawing","isDraw","userName","gameOver","getters","getPlayersCount","getCurrCanvasUrl","getImgUrl","getUserName","getSelectedWord","getIsGameOver","mutations","incrementPlayers","console","log","setUserName","name","setGuess","setSelctedWord","setDoneDrawing","setCanvasUrl","setDrawUrl","setGameRoom","turn","setGameOver","actions","context","commit","$socket","emit","SOCKET_gameRoom","SOCKET_wordChosen","SOCKET_drawSubmitted","SOCKET_gameOver"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport {socketEmitter} from './services/socketEmitter.js'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    isLoggedinUser: false,\n    isSecondLoggdin: false,\n    playersCount: 0,\n    selectedWord: null,\n    userType: '',\n    gameRoom: '', \n    userGuess: '', \n    canvasUrl: '',\n    drawUrl:'',\n    isDoneDrawing: false, \n    isDraw: false,\n    userName: '',\n    gameOver: false \n\n  },\n\n  getters: {\n    getPlayersCount(state) {\n      return state.playersCount;\n    },\n    getCurrCanvasUrl(state) {\n      return state.canvasUrl; \n    },\n    isDraw(state) {\n      return state.isDraw;\n    },\n    isDoneDrawing(state) {\n      return state.isDoneDrawing;\n    },\n    getImgUrl(state) {\n      return state.drawUrl; \n    },\n    getUserName(state) {\n      return state.userName; \n    },\n    getSelectedWord(state) {\n      return state.selectedWord;\n    },\n    getIsGameOver(state) {\n      return state.gameOver;\n    }\n\n\n  },\n\n  mutations: {\n    incrementPlayers(state) {\n      state.playersCount++;\n      console.log('playersCount', this.state.playersCount);\n    },\n    setUserName(state, name){\n      console.log(name)\n      state.userName = name;\n    },\n    setGuess(state, {userGuess}) {\n      state.userGuess = userGuess;\n      console.log('DEBUG:store-setGuess:guess', userGuess);\n    },\n    setSelctedWord(state, {selectedWord}) {\n      state.selectedWord = selectedWord;\n      console.log('DEBUG:store-setSelctedWord:selectedWord', selectedWord);\n    },\n    setDoneDrawing(state) {\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDoneDrawing:true', state.isDoneDrawing);\n    },\n    setCanvasUrl(state, {canvasUrl}) {\n      state.canvasUrl = canvasUrl;\n      console.log('DEBUG:store-setCanvasUrl:canvasUrl', canvasUrl);\n    },\n    setDrawUrl(state, {drawUrl}) {\n      state.drawUrl = drawUrl;\n      state.isDoneDrawing = true;\n      console.log('DEBUG:store-setDrawUrl:drawUrl', drawUrl);\n    },\n    setGameRoom( state, {userName, turn, gameRoom}){\n      state.gameRoom = gameRoom;\n      console.log('DEBUG:store-setGameRoom:gameRoom', gameRoom);\n\n      !turn? state.playersCount = 2 : state.playersCount = 1;\n      if (state.userName === userName) {\n      state.isDraw = turn;\n      }\n    },\n    setGameOver(state) {\n      state.gameOver = true; \n    }\n\n  },\n\n  actions: {\n\n    setGuess(context, {userGuess}) {\n      context.commit('setGuess', {userGuess});\n      // console.log('user guess listed', {userGuess});\n    },\n\n    setSelctedWord(context, {selectedWord}) {\n      context.commit('setSelctedWord', {selectedWord});\n      socketEmitter.$socket.emit('wordChosen',context.state.gameRoom, selectedWord); \n      console.log('user selected a word:', {selectedWord});\n    },\n\n    setCanvasUrl(context, {canvasUrl}) {\n      context.commit('setCanvasUrl', {canvasUrl});\n      // console.log('current canvas base64:', {canvasUrl});\n    },\n    setDoneDrawing(context) {\n      context.commit('setDoneDrawing');\n    },\n    setDrawUrl(context, {drawUrl}) {\n      context.commit('setDrawUrl', {drawUrl});\n      socketEmitter.$socket.emit('drawSubmitted',context.state.gameRoom, drawUrl); \n      // console.log('draw link:', {drawUrl});\n    },\n    setUserName({commit}, {name}){\n      commit('setUserName', name);\n      socketEmitter.$socket.emit('gameRoom', name); \n    },\n    setGameOver(context) {\n      context.commit('setGameOver');\n      socketEmitter.$socket.emit('gameOver',context.state.gameRoom); \n    }, \n\n    SOCKET_gameRoom(context, {userName, turn, gameRoom}){\n      context.commit('setGameRoom', {userName, turn, gameRoom});\n      // console.log('socket store', this.state.playersCount);\n    },\n    SOCKET_wordChosen(context, {selectedWord}) {\n      context.commit('setSelctedWord', {selectedWord});\n    },\n    SOCKET_drawSubmitted(context, {drawUrl}) {\n      context.commit('setDrawUrl', {drawUrl});\n    },\n    SOCKET_gameOver(context) {\n      context.commit('setGameOver');\n    }\n\n  },\n\n});\n\n"]}]}
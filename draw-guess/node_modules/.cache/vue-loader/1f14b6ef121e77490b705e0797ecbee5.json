{"remainingRequest":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/components/drowBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/src/components/drowBoard.vue","mtime":1548159191197},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adibaram/Documents/Coding/Drow-Guess/draw-guess/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\n\nexport default {\n  name: 'home',\n  data() {\n    return {\n      drawing: false,\n       mouse: {\n        current: {\n          x: 0,\n          y: 0\n        },\n        previous: {\n          x: 0,\n          y: 0\n        },\n        down: false\n      }\n    }\n  },\n\n   ready: function () {\n                    \n    var c = document.getElementById(\"canvas\");\n    var ctx = c.getContext(\"2d\");\n    ctx.translate(0.5, 0.5);\n    ctx.imageSmoothingEnabled= false;\n  // this.draw();\n},\n\n  computed: {\n    currentMouse: function () {\n      var c = document.getElementById(\"canvas\");\n      var rect = c.getBoundingClientRect();\n      \n      return {\n        x: this.mouse.current.x - rect.left,\n        y: this.mouse.current.y - rect.top\n      }\n    },\n  },\n  \n  components: {\n\n  },\n  methods: {\n    onMouseDown(e){\n    this.drawing = true;\n      current.x = e.clientX||e.touches[0].clientX;\n      current.y = e.clientY||e.touches[0].clientY;\n    \n    },\n    draw: function (event) {\n      \n      \n      // requestAnimationFrame(this.draw);\n     if (this.mouse.down ) {\n       var c = document.getElementById(\"canvas\");\n\n    var ctx = c.getContext(\"2d\");\n       \n       ctx.clearRect(0,0,800,800);\n       \n  \n    ctx.lineTo(this.currentMouse.x, this.currentMouse.y);\n       ctx.strokeStyle =\"#F63E02\";\n       ctx.lineWidth = 2;\n    ctx.stroke()\n     }\n     \n    },\n    handleMouseDown: function (event) {\n  \n      this.mouse.down = true;\n      if (event.type === 'touchstart') {\n          this.mouse.current = {\n            x:event.changedTouches[0].clientX,\n            y:event.changedTouches[0].clientY,\n          }\n      } else {\n        this.mouse.current = {\n          x: event.pageX,\n          y: event.pageY\n        }\n      }\n\n      var c = document.getElementById(\"canvas\");\n      var ctx = c.getContext(\"2d\");\n\n      ctx.moveTo(this.currentMouse.x, this.currentMouse.y)\n    \n    },\n      handleMouseUp: function () {\n      this.mouse.down = false;\n\n      //save current canvas url to store\n      let currCanvas = this.$refs.canvas;\n      console.log('currCanvas', currCanvas);\n      let pngUrl = currCanvas.toDataURL();\n      // let pngUrl = 'currCanvas.toDataURL()';\n      this.$store.dispatch({ type: 'setCanvasUrl', canvasUrl: pngUrl});\n\n    },\n    handleMouseMove: function (event) {\n\n      if (event.type === 'touchmove') {\n          this.mouse.current = {\n            x:event.changedTouches[0].clientX,\n            y:event.changedTouches[0].clientY,\n          }\n      } else { \n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      }\n    } \n      \n      this.draw(event)\n      \n    }\n  },\n  \n};\n\n\n",{"version":3,"sources":["drowBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA","file":"drowBoard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"draw-board\">\n      <!-- <canvas @mousedown=\"onMouseDown\"></canvas> -->\n      <canvas ref=\"canvas\" id=\"canvas\" v-on:mousedown=\"handleMouseDown\"\n                            v-on:touchstart=\"handleMouseDown\" \n                            v-on:mouseup=\"handleMouseUp\"\n                            v-on:touchend=\"handleMouseUp\"  \n                            v-on:mousemove=\"handleMouseMove\" \n                            v-on:touchmove=\"handleMouseMove\" \n                            max-width=\"400px\" height=\"400px\">\n      </canvas>\n\n  </section>\n</template>\n\n<script>\n// @ is an alias to /src\n\nexport default {\n  name: 'home',\n  data() {\n    return {\n      drawing: false,\n       mouse: {\n        current: {\n          x: 0,\n          y: 0\n        },\n        previous: {\n          x: 0,\n          y: 0\n        },\n        down: false\n      }\n    }\n  },\n\n   ready: function () {\n                    \n    var c = document.getElementById(\"canvas\");\n    var ctx = c.getContext(\"2d\");\n    ctx.translate(0.5, 0.5);\n    ctx.imageSmoothingEnabled= false;\n  // this.draw();\n},\n\n  computed: {\n    currentMouse: function () {\n      var c = document.getElementById(\"canvas\");\n      var rect = c.getBoundingClientRect();\n      \n      return {\n        x: this.mouse.current.x - rect.left,\n        y: this.mouse.current.y - rect.top\n      }\n    },\n  },\n  \n  components: {\n\n  },\n  methods: {\n    onMouseDown(e){\n    this.drawing = true;\n      current.x = e.clientX||e.touches[0].clientX;\n      current.y = e.clientY||e.touches[0].clientY;\n    \n    },\n    draw: function (event) {\n      \n      \n      // requestAnimationFrame(this.draw);\n     if (this.mouse.down ) {\n       var c = document.getElementById(\"canvas\");\n\n    var ctx = c.getContext(\"2d\");\n       \n       ctx.clearRect(0,0,800,800);\n       \n  \n    ctx.lineTo(this.currentMouse.x, this.currentMouse.y);\n       ctx.strokeStyle =\"#F63E02\";\n       ctx.lineWidth = 2;\n    ctx.stroke()\n     }\n     \n    },\n    handleMouseDown: function (event) {\n  \n      this.mouse.down = true;\n      if (event.type === 'touchstart') {\n          this.mouse.current = {\n            x:event.changedTouches[0].clientX,\n            y:event.changedTouches[0].clientY,\n          }\n      } else {\n        this.mouse.current = {\n          x: event.pageX,\n          y: event.pageY\n        }\n      }\n\n      var c = document.getElementById(\"canvas\");\n      var ctx = c.getContext(\"2d\");\n\n      ctx.moveTo(this.currentMouse.x, this.currentMouse.y)\n    \n    },\n      handleMouseUp: function () {\n      this.mouse.down = false;\n\n      //save current canvas url to store\n      let currCanvas = this.$refs.canvas;\n      console.log('currCanvas', currCanvas);\n      let pngUrl = currCanvas.toDataURL();\n      // let pngUrl = 'currCanvas.toDataURL()';\n      this.$store.dispatch({ type: 'setCanvasUrl', canvasUrl: pngUrl});\n\n    },\n    handleMouseMove: function (event) {\n\n      if (event.type === 'touchmove') {\n          this.mouse.current = {\n            x:event.changedTouches[0].clientX,\n            y:event.changedTouches[0].clientY,\n          }\n      } else { \n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      }\n    } \n      \n      this.draw(event)\n      \n    }\n  },\n  \n};\n\n\n</script>\n  \n<style lang=\"scss\" scoped>\n  .draw-board {\n    width: 90%; \n    height: 400px; \n    background-color: #fbf49c;\n  }\n\n</style>\n\n\n\n\n"]}]}